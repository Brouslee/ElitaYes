/**
 * ูุซุงู ุนูู ุฃูุฑ ุงูุจูุช
 * Bot Command Example
 * 
 * ูุฐุง ููู ูุซุงู ููุถุญ ููููุฉ ุฅูุดุงุก ุฃูุฑ ุฌุฏูุฏ ููุจูุช
 * This is an example file showing how to create a new bot command
 * 
 * ูุณุฎ ูุฐุง ุงูููู ูุชุนุฏููู ูุฅูุดุงุก ุฃูุงูุฑ ุฌุฏูุฏุฉ
 * Copy this file and modify it to create new commands
 */

const logger = require('../core/logger');
const User = require('../database/models/User');

module.exports = {
    // ุฅุนุฏุงุฏุงุช ุงูุฃูุฑ - Command Configuration
    config: {
        // ุงุณู ุงูุฃูุฑ (ูุทููุจ) - Command name (required)
        name: 'example',
        
        // ูุตู ุงูุฃูุฑ - Command description
        description: 'ูุซุงู ุนูู ุฃูุฑ ุงูุจูุช - Example bot command',
        
        // ุทุฑููุฉ ุงูุงุณุชุฎุฏุงู - Usage pattern
        usage: 'example [parameter]',
        
        // ุงูุฃุณูุงุก ุงูุจุฏููุฉ ููุฃูุฑ - Command aliases
        aliases: ['ex', 'demo'],
        
        // ูุฆุฉ ุงูุฃูุฑ - Command category
        category: 'ุนุงู - General',
        
        // ูุชุฑุฉ ุงูุงูุชุธุงุฑ ุจุงูุซูุงูู (ุงุฎุชูุงุฑู) - Cooldown in seconds (optional)
        cooldown: 5,
        
        // ุงูุตูุงุญูุงุช ุงููุทููุจุฉ (ุงุฎุชูุงุฑู) - Required permissions (optional)
        permissions: [],
        
        // ูู ุงูุฃูุฑ ูููุดุฑููู ููุทุ - Is admin only?
        adminOnly: false,
        
        // ูู ุงูุฃูุฑ ูููุฌููุนุงุช ููุทุ - Is group only?
        groupOnly: false,
        
        // ูู ุงูุฃูุฑ ููุฑุณุงุฆู ุงูุฎุงุตุฉ ููุทุ - Is DM only?
        dmOnly: false,
        
        // ุงูุญุฏ ุงูุฃุฏูู ูุนุฏุฏ ุงููุนุงููุงุช - Minimum arguments
        minArgs: 0,
        
        // ุงูุญุฏ ุงูุฃูุตู ูุนุฏุฏ ุงููุนุงููุงุช - Maximum arguments
        maxArgs: -1, // -1 = ูุง ุญุฏูุฏ - unlimited
        
        // ูุซุงู ุนูู ุงูุงุณุชุฎุฏุงู - Usage examples
        examples: [
            'example',
            'example hello',
            'ex test'
        ]
    },

    /**
     * ุชูููุฐ ุงูุฃูุฑ - Execute Command
     * @param {Object} context - ุณูุงู ุงูุฃูุฑ - Command context
     * @param {Object} context.bot - ูุฑุฌุน ุงูุจูุช - Bot reference
     * @param {Object} context.message - ุจูุงูุงุช ุงูุฑุณุงูุฉ - Message data
     * @param {Array} context.args - ูุนุงููุงุช ุงูุฃูุฑ - Command arguments
     * @param {Object} context.user - ุจูุงูุงุช ุงููุณุชุฎุฏู - User data
     * @param {Function} context.reply - ุฏุงูุฉ ุงูุฑุฏ - Reply function
     */
    async run(context) {
        try {
            const { bot, message, args, user, reply } = context;

            // ุชุณุฌูู ุงุณุชุฎุฏุงู ุงูุฃูุฑ - Log command usage
            logger.info(`ุชูููุฐ ุฃูุฑ ุงููุซุงู ุจูุงุณุทุฉ - Example command executed by: ${user.username || user.id}`);

            // ุงูุชุญูู ูู ูุฌูุฏ ูุนุงููุงุช - Check for arguments
            if (args.length === 0) {
                // ุฑุฏ ุงูุชุฑุงุถู ุจุฏูู ูุนุงููุงุช - Default reply without arguments
                await reply(`
๐ค *ูุฑุญุจุงู! ูุฐุง ูุซุงู ุนูู ุฃูุฑ ุงูุจูุช*
*Hello! This is an example bot command*

๐ **ุทุฑููุฉ ุงูุงุณุชุฎุฏุงู - Usage:**
\`!example [parameter]\`

๐ **ุฃูุซูุฉ - Examples:**
โข \`!example\` - ุฑุณุงูุฉ ุชุฑุญูุจ
โข \`!example hello\` - ุฑุณุงูุฉ ูุฎุตุตุฉ
โข \`!ex test\` - ุงุณุชุฎุฏุงู ุงูุงุณู ุงูุจุฏูู

โน๏ธ **ูุนูููุงุช ุฅุถุงููุฉ - Additional Info:**
โข ุงููุฆุฉ: ${this.config.category}
โข ูุชุฑุฉ ุงูุงูุชุธุงุฑ: ${this.config.cooldown} ุซุงููุฉ
โข ุงูุฃุณูุงุก ุงูุจุฏููุฉ: ${this.config.aliases.join(', ')}
                `);
                return;
            }

            // ูุนุงูุฌุฉ ุงููุนุงููุงุช - Process arguments
            const parameter = args.join(' ');

            // ุงูุชูุงุนู ูุน ูุงุนุฏุฉ ุงูุจูุงูุงุช - Database interaction
            let dbUser = await User.findByInstagramId(user.id);
            
            if (!dbUser) {
                // ุฅูุดุงุก ูุณุชุฎุฏู ุฌุฏูุฏ - Create new user
                dbUser = new User({
                    instagramId: user.id,
                    username: user.username || 'unknown'
                });
                await dbUser.save();
                logger.info(`ุชู ุฅูุดุงุก ูุณุชุฎุฏู ุฌุฏูุฏ - New user created: ${user.id}`);
            }

            // ุชุญุฏูุซ ููุช ุงููุดุงุท - Update last activity
            await dbUser.updateLastActivity();

            // ุฑุฏ ูุฎุตุต ูุน ุงููุนุงูู - Custom reply with parameter
            await reply(`
โ *ุชู ุชูููุฐ ุงูุฃูุฑ ุจูุฌุงุญ!*
*Command executed successfully!*

๐ฅ **ุงููุนุงูู ุงููุฑุณู - Sent Parameter:** \`${parameter}\`
๐ค **ุงููุณุชุฎุฏู - User:** ${dbUser.username || dbUser.instagramId}
๐ **ุงูููุช - Time:** ${new Date().toLocaleString('ar-SA')}

๐ง **ูุนูููุงุช ุชูููุฉ - Technical Info:**
โข ูุนุฑู ุงููุณุชุฎุฏู: \`${user.id}\`
โข ุนุฏุฏ ุงููุนุงููุงุช: ${args.length}
โข ููุน ุงูุฑุณุงูุฉ: ${message.groupId ? 'ูุฌููุนุฉ' : 'ุฎุงุต'}
            `);

            // ูุซุงู ุนูู ุฅุฑุณุงู ุฑุณุงูุฉ ุฅุถุงููุฉ (ุงุฎุชูุงุฑู)
            // Example of sending additional message (optional)
            if (parameter.toLowerCase() === 'help') {
                await reply(`
๐ **ูุณุงุนุฏุฉ ุฅุถุงููุฉ - Additional Help:**

ูุฐุง ุงูุฃูุฑ ูุฎุตุต ููุงุฎุชุจุงุฑ ูุงูุชุทููุฑ
This command is for testing and development

๐ **ุงูุฏูุงู ุงููุชุงุญุฉ - Available Functions:**
โข \`context.bot\` - ุงููุตูู ููุจูุช
โข \`context.message\` - ุจูุงูุงุช ุงูุฑุณุงูุฉ
โข \`context.args\` - ูุนุงููุงุช ุงูุฃูุฑ
โข \`context.user\` - ุจูุงูุงุช ุงููุณุชุฎุฏู
โข \`context.reply()\` - ุฅุฑุณุงู ุฑุฏ

๐ **ูููุฒูุฏ ูู ุงููุนูููุงุช:**
ุฑุงุฌุน ููู docs/COMMAND_TEMPLATE.md
                `);
            }

        } catch (error) {
            // ูุนุงูุฌุฉ ุงูุฃุฎุทุงุก - Error handling
            logger.error('ุฎุทุฃ ูู ุชูููุฐ ุฃูุฑ ุงููุซุงู - Error executing example command:', error);
            
            await context.reply(`
โ **ุญุฏุซ ุฎุทุฃ ุฃุซูุงุก ุชูููุฐ ุงูุฃูุฑ**
**An error occurred while executing the command**

๐ **ุชูุงุตูู ุงูุฎุทุฃ - Error Details:**
\`${error.message}\`

๐ก **ุงูุชุฑุงุญุงุช - Suggestions:**
โข ุชุฃูุฏ ูู ุตุญุฉ ุงููุนุงููุงุช
โข ุฌุฑุจ ุงูุฃูุฑ ูุฑุฉ ุฃุฎุฑู
โข ุชูุงุตู ูุน ุงููุทูุฑ ุฅุฐุง ุงุณุชูุฑ ุงูุฎุทุฃ
            `);
        }
    }
};

/*
==============================================
ุฏููู ุฅูุดุงุก ุฃูุฑ ุฌุฏูุฏ - New Command Creation Guide
==============================================

1. ูุณุฎ ูุฐุง ุงูููู ูุฅุนุงุฏุฉ ุชุณููุชู
   Copy this file and rename it

2. ุชุนุฏูู config.name ููููู ุงุณู ุงูุฃูุฑ ุงูุฌุฏูุฏ
   Modify config.name to be the new command name

3. ุชุญุฏูุซ ุงููุตู ูุงูุฅุนุฏุงุฏุงุช ุงูุฃุฎุฑู
   Update description and other settings

4. ูุชุงุจุฉ ููุทู ุงูุฃูุฑ ูู ุฏุงูุฉ run()
   Write command logic in run() function

5. ุงุฎุชุจุงุฑ ุงูุฃูุฑ ูุงูุชุฃูุฏ ูู ุนููู
   Test the command and ensure it works

==============================================
ุงูุฏูุงู ุงููุชุงุญุฉ ูู context - Available Functions in context
==============================================

โข context.bot - ูุฑุฌุน ุงูุจูุช ุงูุฑุฆูุณู
โข context.message - ุจูุงูุงุช ุงูุฑุณุงูุฉ ุงููุงุฑุฏุฉ
โข context.args - ูุตูููุฉ ูุนุงููุงุช ุงูุฃูุฑ
โข context.user - ูุนูููุงุช ุงููุณุชุฎุฏู
โข context.reply(message, options) - ุฅุฑุณุงู ุฑุฏ

==============================================
ุฃูุซูุฉ ุนูู ุงูุงุณุชุฎุฏุงู - Usage Examples
==============================================

// ุฅุฑุณุงู ุฑุณุงูุฉ ุจุณูุทุฉ
await context.reply('ูุฑุญุจุงู!');

// ุฅุฑุณุงู ุฑุณุงูุฉ ููุณูุฉ
await context.reply(`**ุนููุงู**\n\`ููุฏ\`\n*ูุงุฆู*`);

// ุงููุตูู ูุจูุงูุงุช ุงููุณุชุฎุฏู
const userId = context.user.id;
const username = context.user.username;

// ุงุณุชุฎุฏุงู ูุงุนุฏุฉ ุงูุจูุงูุงุช
const dbUser = await User.findByInstagramId(userId);

// ุฅุฑุณุงู ุฑุณุงูุฉ ููุจูุช
await context.bot.sendMessage(userId, 'ุฑุณุงูุฉ');

==============================================
*/
